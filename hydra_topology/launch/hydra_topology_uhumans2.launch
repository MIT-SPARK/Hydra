<launch>
    <arg name="sim_time_required" default="true"/>
    <param name="use_sim_time" value="$(arg sim_time_required)"/>

    <arg name="use_semantics" default="true"/>
    <arg name="use_gt_semantics" default="true"/>
    <arg name="use_gt_frame" default="true"/>

    <arg name="sensor_frame" default="left_cam_kimera" unless="$(arg use_gt_frame)"/>
    <arg name="sensor_frame" default="left_cam" if="$(arg use_gt_frame)"/>

    <arg name="semantic_color_path"
         default="$(find kimera_semantics_ros)/cfg/tesse_multiscene_office1_segmentation_mapping.csv"
         if="$(arg use_gt_semantics)"/>
    <arg name="semantic_color_path"
         default="$(find semantic_recolor)/config/colors/ade150_config.csv"
         unless="$(arg use_gt_semantics)"/>

    <arg name="rgb_info_topic" default="tesse/seg_cam/camera_info" if="$(arg use_semantics)"/>
    <arg name="rgb_info_topic" default="tesse/left_cam/camera_info" unless="$(arg use_semantics)"/>
    <arg name="rgb_topic" default="tesse/seg_cam/rgb/image_raw" if="$(arg use_semantics)"/>
    <arg name="rgb_topic" default="tesse/left_cam/rgb/image_raw" unless="$(arg use_semantics)"/>
    <arg name="depth_topic" default="tesse/depth_cam/mono/image_raw"/>

    <arg name="pointcloud_topic" value="semantic_pointcloud" if="$(arg use_semantics)"/>
    <arg name="pointcloud_topic" value="pointcloud" unless="$(arg use_semantics)"/>

    <include file="$(find hydra_utils)/launch/includes/rgbd_to_pointcloud.xml" pass_all_args="true"
             if="$(eval arg('use_gt_semantics') or not arg('use_semantics'))"/>

    <include file="$(find semantic_recolor)/launch/semantic_recolor_pointcloud.launch" pass_all_args="true"
             if="$(eval arg('use_semantics') and not arg('use_gt_semantics'))"/>

    <include file="$(find hydra_topology)/launch/hydra_topology.launch" pass_all_args="true">
        <arg name="config" value="uhumans2_topology_config.yaml"/>
        <!-- set semantic config based on semantics choice -->
        <arg name="semantic_config" default="uhumans2_semantic_config.yaml" if="$(arg use_gt_semantics)"/>
        <arg name="semantic_config" default="ade150_semantic_config.yaml" unless="$(arg use_gt_semantics)"/>
    </include>

</launch>
